{"version":3,"sources":["time_stamp_regex.js"],"names":[],"mappings":"AAAA;;;;;;;;;AAKA,IAAI,yBAAyB,SAAzB,sBAAyB,CAAU,kBAAV,EAA8B,QAA9B,EAAwC,EAAxC,EAA4C;AACrE,QAAI,UAAU,EAAV,CADiE;AAErE,QAAI,cAAc,EAAd,CAFiE;;AAIrE,QAAI,SAAS,aAAG,gBAAH,CAAoB,QAApB,CAAT,CAJiE;AAKrE,QAAI,UAAU,CAAV,CALiE;AAMrE,QAAI,MAAM,EAAN;;;;AANiE,SAUhE,IAAI,IAAI,CAAJ,EAAO,IAAI,mBAAmB,MAAnB,EAA2B,GAA/C,EAAoD;AAChD,YAAI,cAAc,IAAd,CAAmB,mBAAmB,CAAnB,CAAnB,CAAJ,EAA8C,OAAO,KAAP,CAA9C,KACK,IAAI,UAAU,IAAV,CAAe,mBAAmB,CAAnB,CAAf,CAAJ,EAA0C,OAAO,KAAP,CAA1C,KACA,IAAI,mBAAmB,CAAnB,KAAyB,GAAzB,EAA6B,OAAO,KAAP,CAAjC,KACA,IAAI,OAAO,IAAP,CAAY,mBAAmB,CAAnB,CAAZ,CAAJ,EAAuC,OAAO,KAAP,CAAvC;KAJT;;;AAVqE,QAkBjE,QAAQ,IAAI,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAAR;;;AAlBiE,UAqBrE,CAAO,EAAP,CAAU,MAAV,EAAkB,UAAU,IAAV,EAAgB;AAC9B,YAAI,QAAQ,KAAK,QAAL,CAAc,OAAd,CAAR,CAD0B;AAE9B,YAAI,IAAI,CAAJ,CAF0B;AAG9B,YAAI,KAAJ,CAH8B;AAI9B,eAAO,CAAC,QAAQ,MAAM,IAAN,CAAW,KAAX,CAAR,CAAD,KAAgC,IAAhC,EAAsC;;;AAGzC,gBAAI,OAAO,IAAP,CAAY,OAAZ,EAAqB,OAArB,CAA6B,MAAM,CAAN,EAAS,IAAT,EAA7B,KAAiD,CAAC,CAAD,EACjD,QAAQ,MAAM,CAAN,EAAS,IAAT,EAAR,IAA2B,MAAM,KAAN,GAAc,OAAd,CAD/B;AAEA,gBALyC;SAA7C;AAOA,mBAAW,KAAK,MAAL,CAXmB;KAAhB,CAAlB,CArBqE;;AAmCrE,WAAO,WAAP,CAAmB,OAAnB,EAA4B,YAAY;AACpC,eAAO,IAAP,CAAY,OAAZ,EAAqB,OAArB,CAA6B,UAAU,GAAV,EAAe;AACxC,wBAAY,MAAM,GAAN,GAAY,CAAC,OAAO,IAAP,CAAY,OAAZ,EAAqB,OAArB,CAA6B,GAA7B,IAAoC,CAApC,CAAD,CAAwC,QAAxC,EAAZ,CAAZ,GAA8E,QAAQ,GAAR,CAA9E,CADwC;SAAf,CAA7B,CADoC;AAIpC,WAAG,OAAH,EAJoC;KAAZ,CAA5B,CAnCqE;CAA5C;;AA4C7B,OAAO,OAAP,GAAiB;AACb,wBAAoB,sBAApB;CADJ","file":"time_stamp_regex-compiled.js","sourcesContent":["'use strict';\n\nimport fs from  './fs';\n\n//generic regex for timestamp\nvar find_index_of_metadata = function (highlightTimestamp, fileName, cb) {\n    var indices = {};\n    var new_indices = {};\n\n    var stream = fs.createReadStream(fileName);\n    var counter = 0;\n    var reg = \"\";\n\n    //generating regex dynamically\n\n    for (var k = 0; k < highlightTimestamp.length; k++) {\n        if (/^[a-z|A-Z]$/.test(highlightTimestamp[k]))reg += '\\\\w';\n        else if (/^[0-9]$/.test(highlightTimestamp[k]))reg += '\\\\d';\n        else if (highlightTimestamp[k] == ' ')reg += '\\\\s';\n        else if (/^\\W$/.test(highlightTimestamp[k]))reg += '\\\\W';\n    }\n\n    //regex is created\n    var regex = new RegExp(reg, 'g');\n\n    //\n    stream.on('data', function (data) {\n        var value = data.toString('utf-8');\n        var i = 1;\n        var match;\n        while ((match = regex.exec(value)) !== null) {\n\n            //ignoring the repetition of timestamp\n            if (Object.keys(indices).indexOf(match[0].trim()) == -1)\n                indices[match[0].trim()] = match.index + counter;\n            i++;\n        }\n        counter += data.length;\n    });\n\n    stream.addListener('close', function () {\n        Object.keys(indices).forEach(function (key) {\n            new_indices[key + '_' + (Object.keys(indices).indexOf(key) + 1).toString()] = indices[key];\n        });\n        cb(indices);\n    });\n\n};\n\nmodule.exports = {\n    find_index_of_time: find_index_of_metadata\n};"]}